{"version":3,"sources":["Header/Header.js","TaskList/TaskListElement.js","TaskList/TaskList.js","TaskList/Tasks.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","isOpenCreateTaskForm","setIsOpenCreateTaskForm","taskInput","setTaskInput","taskInputDescription","setTaskInputDescription","isActiveBtnTaskCreate","setIsActiveBtnTaskCreate","class","className","onClick","htmlFor","type","onChange","e","target","value","length","preventDefault","console","log","createTask","disabled","TaskListElement","el","name","deleteTask","id","status","description","width","priority","role","aria-label","elementPriorityIncrease","elementPriorityDecrease","statusDecrease","statusIncrease","TaskList","taskList","map","Tasks","filter","sort","a","v","objToday","Date","today","getDay","getDate","getMonth","getFullYear","Footer","todo","inProgress","review","done","taskListDefoult","Math","random","App","setTaskList","setTodo","setInProgress","setReview","setDone","recalcTaskStatus","todoCounter","inProgressCounter","reviewCounter","doneCounter","title","updatedTaskList","push","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b12bf8dc.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\n\nfunction Header(props) {\n    const [isOpenCreateTaskForm, setIsOpenCreateTaskForm] = useState(false);\n    const [taskInput, setTaskInput] = useState(\"\");\n    const [taskInputDescription, setTaskInputDescription] = useState(\"\");\n\n    const [isActiveBtnTaskCreate, setIsActiveBtnTaskCreate] = useState(false);\n    const openCreateTaskForm = ()=>{\n        setIsOpenCreateTaskForm(true);\n    }\n    const onChange = (e)=>{\n        setIsActiveBtnTaskCreate(e.target.value.length > 4);\n        setTaskInput(e.target.value);\n\n    }\n    const onChangeDescription = (e)=>{\n        setTaskInputDescription(e.target.value);\n    }\n    const taskSubmit = (e)=>{\n        e.preventDefault();\n        console.log(taskInput, taskInputDescription);\n        props.createTask(taskInput, taskInputDescription);\n        setIsOpenCreateTaskForm(false);\n        setIsActiveBtnTaskCreate(false);\n        setTaskInput(\"\");\n        setTaskInputDescription(\"\");\n\n    }\n    const taskReset = (e)=>{\n        e.preventDefault();\n        setIsOpenCreateTaskForm(false);\n        setIsActiveBtnTaskCreate(false);\n        setTaskInput(\"\");\n        setTaskInputDescription(\"\");\n    }\n\n  return (\n\n      <div class=\"container\">\n        <h1>Kanban </h1>\n\n          {!isOpenCreateTaskForm &&\n          <button className=\"btn btn-primary\" onClick={openCreateTaskForm}>Create Task</button>}\n\n        {isOpenCreateTaskForm &&\n\n        <form>\n          <div class=\"form-group\">\n            <label htmlFor=\"exampleInpu email1\">Title</label>\n            <input type=\"text\" class=\"form-control\" onChange={onChange} value={taskInput}/>\n              <label htmlFor=\"exampleInpu email1\">Description</label>\n              <input type=\"text\" className=\"form-control\" onChange={onChangeDescription} value={taskInputDescription}/>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\"\n                  onClick={taskSubmit}\n                  disabled={!isActiveBtnTaskCreate}>Submit\n          </button>\n          <button className=\"btn btn-secondary\"\n                  onClick={taskReset}>\n            Task Reset\n          </button>\n        </form>\n        }\n      </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst statuses = []\n\n\nfunction TaskListElement(props) {\n    const deleteTask = () => {\n        props.deleteTask(props.el.id);\n    }\n\n    const elementPriorityIncrease = () => {\n        props.elementPriorityIncrease(props.el.id);\n    }\n    const elementPriorityDecrease = () => {\n        props.elementPriorityDecrease(props.el.id);\n    }\n\n    const statusIncrease = () => {\n        props.statusIncrease(props.el.id)\n    }\n\n    const statusDecrease = () => {\n        props.statusDecrease(props.el.id)\n    }\n\n    return (\n        <div className=\"card shadow bg-white rounded\">\n            <div className=\"card-body\">\n                <h5 class=\"card-title\">{props.el.name}\n                    <button type=\"button\" className=\"btn btn-sm float-right\" onClick={deleteTask}>\n                        <i class=\"fa fa-trash-o\"></i>\n                    </button>\n\n                    <button type=\"button\" className=\"btn btn-sm float-right\" disabled={props.el.status === 3}>\n                        <i className=\"fa fa-edit\"></i>\n                    </button>\n\n\n                </h5>\n\n                <p className=\"card-text\">{props.el.description}</p>\n\n                <div className=\"input-group\">\n                <span className=' btn  btn-sm' width=\"100%\">\n                    Priority: {\n                    props.el.priority === 3 ? ' High' :\n                        props.el.priority === 2 ? ' Medium' : ' Law  '\n\n                }</span>\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n\n                        <button className=\"btn btn-sm float-left\"\n                                disabled={props.el.priority === 3 || props.el.status === 3}\n                                onClick={elementPriorityIncrease}><i className=\"fa fa-arrow-up\"></i></button>\n\n                        <button className=\"btn btn-sm float-right\"\n                                disabled={props.el.priority === 1 || props.el.status === 3}\n                                onClick={elementPriorityDecrease}><i className=\"fa fa-arrow-down\"></i></button>\n                    </div>\n\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <button className=\"btn btn-sm \" disabled={props.el.status === 0} onClick={statusDecrease}><i\n                            className=\"fa fa-arrow-left\"></i></button>\n\n                        <button className=\"btn btn-sm \" disabled={props.el.status === 3} onClick={statusIncrease}><i\n                            className=\"fa fa-arrow-right\"></i></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TaskListElement;\n","import React from 'react';\nimport TaskListElement from \"./TaskListElement\";\n\nfunction TaskList(props) {\n    const deleteTask = (id)=>{\n        props.deleteTask(id);\n    }\n    const elementPriorityDecrease = (id) =>{\n        props.elementPriorityDecrease(id);\n\n    }\n    const elementPriorityIncrease = (id) =>{\n        props.elementPriorityIncrease(id);\n    }\n    const statusDecrease = (id) =>{\n        props.statusDecrease(id);\n\n    }\n    const statusIncrease = (id) =>{\n        props.statusIncrease(id);\n    }\n    return (\n        <div className=\"col-sm\">\n            <div className=\"card shadow bg-white rounded\">\n                <div className=\"card-header\">\n                    <h5>{\n                        props.status === 0? \"Todo\":\n                            props.status === 1? \"In propgres\":\n                                props.status === 2 ? \"Review\": \"Done\"\n                    }</h5>\n                </div>\n            </div>\n\n            {props.taskList.map((el) =>\n\n                <TaskListElement el={el} deleteTask = {deleteTask}\n                                 elementPriorityDecrease = {elementPriorityDecrease}\n                                 elementPriorityIncrease = {elementPriorityIncrease}\n                                 statusDecrease = {statusDecrease}\n                                 statusIncrease = {statusIncrease}\n                />\n            )}\n        </div>\n\n    );\n}\n\nexport default TaskList;\n","import React from 'react';\nimport TaskList from \"./TaskList\";\nimport TaskListElement from \"./TaskListElement\";\n\n\nfunction Tasks(props) {\n\n    const deleteTask = (id)=>{\n        props.deleteTask(id);\n    }\n    const elementPriorityDecrease = (id) =>{\n        props.elementPriorityDecrease(id);\n\n    }\n    const elementPriorityIncrease = (id) =>{\n        props.elementPriorityIncrease(id);\n    }\n    const statusDecrease = (id) =>{\n        props.statusDecrease(id);\n\n    }\n    const statusIncrease = (id) =>{\n        props.statusIncrease(id);\n    }\n\n    return (\n        <div className=\"container\">\n            <hr/>\n            <div className=\"row\">\n                <TaskList status=\"0\"\n                          taskList={props.taskList.filter(el => el.status === 0).sort((a, v) => v.priority - a.priority)}\n                deleteTask = {deleteTask}\n                          elementPriorityDecrease = {elementPriorityDecrease}\n                          elementPriorityIncrease = {elementPriorityIncrease}\n                          statusDecrease = {statusDecrease}\n                          statusIncrease = {statusIncrease}\n                />\n                <TaskList status ={1} taskList = {props.taskList.filter(el=> el.status === 1).sort((a,v)=>v.priority-a.priority)}\n                          deleteTask = {deleteTask}\n                          elementPriorityDecrease = {elementPriorityDecrease}\n                          elementPriorityIncrease = {elementPriorityIncrease}\n                          statusDecrease = {statusDecrease}\n                          statusIncrease = {statusIncrease}\n                />\n                <TaskList status ={2} taskList = {props.taskList.filter(el=> el.status === 2).sort((a,v)=>v.priority-a.priority)}\n                          deleteTask = {deleteTask}\n                          elementPriorityDecrease = {elementPriorityDecrease}\n                          elementPriorityIncrease = {elementPriorityIncrease}\n                          statusDecrease = {statusDecrease}\n                          statusIncrease = {statusIncrease}\n                />\n                <TaskList status ={3} taskList = {props.taskList.filter(el=> el.status === 3).sort((a,v)=>v.priority-a.priority)}\n                          deleteTask = {deleteTask}\n                          elementPriorityDecrease = {elementPriorityDecrease}\n                          elementPriorityIncrease = {elementPriorityIncrease}\n                          statusDecrease = {statusDecrease}\n                          statusIncrease = {statusIncrease}\n                />\n            </div>\n        </div>\n\n    );\n}\n\nexport default Tasks;\n","import React, {useState} from 'react';\n\n\nconst objToday = new Date();\n\nconst weekday = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst dayOfWeek = weekday[objToday.getDay()];\nconst dayOfMonth = (objToday.getDate() < 10) ? '0' + objToday.getDate() : objToday.getDate();\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst curMonth = months[objToday.getMonth()];\nconst curYear = objToday.getFullYear();\n\nconst today = dayOfWeek + \" \" + dayOfMonth + \" of \" + curMonth + \", \" + curYear;\n\nfunction Footer(props) {\n\n  return (\n    <div className=\"container\">\n      <h5>Today {today}</h5>\n        <div className=\"row\">\n            <div className=\"col\" >I have Todo:{props.todo}</div>\n            <div className=\"col\" >In progress:{props.inProgress}</div>\n            <div className=\"col\" >For review:{props.review}</div>\n            <div className=\"col\" >Done:{props.done}</div>\n        </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, {useState} from 'react';\nimport Header from \"./Header/Header\";\nimport Tasks from \"./TaskList/Tasks\";\n\nimport Footer from \"./Footer/Footer\";\nimport TaskListElement from \"./TaskList/TaskListElement\";\n\nconst taskListDefoult = [\n    {\n        id:  Math.random(),\n        name: 'Task 1',\n        description: 'To do Task 1',\n        priority: 1,\n        status: 0\n    },\n    {\n        id: Math.random(),\n        name: 'Task 2',\n        description: 'To do Task 2',\n        priority: 2,\n        status: 1\n    },\n    {\n        id: Math.random(),\n        name: 'Task 3',\n        description: 'To do Task 3',\n        priority: 3,\n        status: 2\n    },\n    {\n        id: Math.random(),\n        name: 'Task 4',\n        description: 'To do Task 3',\n        priority: 2,\n        status: 2\n    },\n    {\n        id: Math.random(),\n        name: 'Task 5',\n        description: 'To do Task 3',\n        priority: 3,\n        status: 3\n    },\n    {\n        id: Math.random(),\n        name: 'Task 6',\n        description: 'To do Task 3',\n        priority: 2,\n        status: 3\n    },\n]\n\n\nfunction App() {\n    const [taskList, setTaskList] = useState(taskListDefoult);\n\n    const[todo, setTodo] = useState(1);\n    const[inProgress, setInProgress] = useState(1);\n    const[review, setReview] = useState(2);\n    const[done, setDone] = useState(2);\n\n    const recalcTaskStatus = (taskList) =>{\n\n        let todoCounter = 0, inProgressCounter = 0, reviewCounter = 0, doneCounter = 0;\n\n        taskList.map( el=>{\n            el.status === 0 ? todoCounter ++ :\n                el.status === 1? inProgressCounter ++:\n                    el.status === 2? reviewCounter++:doneCounter++\n\n        })\n        setTodo(todoCounter);\n        setInProgress(inProgressCounter);\n        setReview(reviewCounter);\n        setDone(doneCounter);\n\n    }\n    const createTask = (title, description)=>{\n        const updatedTaskList = [... taskList];\n        updatedTaskList.push({name: title, id:Math.random(), description:description, status:0, priority:1});\n        setTaskList(updatedTaskList);\n        recalcTaskStatus(updatedTaskList);\n\n    }\n    const deleteTask = (id) =>{\n        const updatedTaskList = taskList.filter(el=> el.id != id);\n        setTaskList(updatedTaskList);\n        recalcTaskStatus(updatedTaskList);\n\n    }\n    const elementPriorityDecrease = (id) =>{\n        const updatedTaskList = taskList.map( el=> {\n            if (el.id === id) return {...el, priority: el.priority-1}\n            else return el;\n        })\n        setTaskList(updatedTaskList);\n        recalcTaskStatus(updatedTaskList);\n    }\n\n    const elementPriorityIncrease = (id) =>{\n        const updatedTaskList = taskList.map( el=> {\n            if (el.id === id) return {...el, priority: el.priority+1}\n            else return el;\n        })\n        setTaskList(updatedTaskList);\n        recalcTaskStatus(updatedTaskList);\n    }\n    const statusDecrease = (id) =>{\n        const updatedTaskList = taskList.map( el=> {\n            if (el.id === id) return {...el, status: el.status-1}\n            else return el;\n        })\n        setTaskList(updatedTaskList);\n        recalcTaskStatus(updatedTaskList);\n\n    }\n    const statusIncrease = (id) =>{\n        const updatedTaskList = taskList.map( el=> {\n            if (el.id === id) return {...el, status: el.status+1}\n            else return el;\n        })\n        setTaskList(updatedTaskList);\n        recalcTaskStatus(updatedTaskList);\n    }\n    return (\n        <div>\n            <Header createTask = {createTask}/>\n            <Tasks taskList={taskList} deleteTask = {deleteTask}\n                   elementPriorityDecrease = {elementPriorityDecrease}\n                   elementPriorityIncrease = {elementPriorityIncrease}\n                   statusDecrease = {statusDecrease}\n                   statusIncrease = {statusIncrease}\n            />\n            <Footer todo = {todo} inProgress = {inProgress} review={review} done = {done}/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}